# -*- coding: utf-8 -*-
"""aula1-semana6-pycaret.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hIOZxtt_yAt7XHAQvt2oQ1rcdQcktI_S
"""

!pip3 install pycaret[full] #usar a versão completa

!pip install unidecode

import pandas as pd
import numpy as np
from unidecode import unidecode

df = pd.read_csv('/content/pre-processed_data_COVID19.csv')
df.head()

df.columns

"""##  #Importando o Pycaret"""

from pycaret.classification import *

s = setup(
    data = df,
    target = 'Classification',
    use_gpu=True,
    ignore_features=['Source of Infection	', 'Outbreak Associated']
)

melhor_modelo = compare_models()

melhor_modelo

evaluate_model(melhor_modelo)

#salvando o modelo
save_model(melhor_modelo, 'modelo_2')

modelo_final = create_model(melhor_modelo)

previsoes = predict_model(modelo_final, data=df)

"""# CONSTRUINDO MINHA API

## Usando FastAPI
"""

!pip install pycaret[full] fastapi

!pip install uvicorn

pip install 'uvicorn[standard]'

# from fastapi import FastAPI
# from pydantic import BaseModel
# import joblib
# import uvicorn

# # Carregando o modelo treinado
# modelo = joblib.load('/content/modelo_2.pkl')


# app = FastAPI()


# class DadosEntrada(BaseModel):
#     feature1: float
#     feature2: float


# # Definindo um endpoint
# @app.post("/prever/")
# async def prever(dados: DadosEntrada):
#     dados_para_previsao = [[dados.feature1, dados.feature2]]

#     previsao = modelo.predict(dados_para_previsao)[0]

#     # Retornando a previsão
#     return {"previsao": previsao}

"""# EXECUTAR ESTE NO VS CODE

"""

import pandas as pd
from pycaret.classification import *
from fastapi import FastAPI
from pydantic import BaseModel
import uvicorn
import joblib

model = load_model('modelo_2')

app = FastAPI()

class InputData(BaseModel):
    feature1: float
    feature2: float

@app.post("/predict/")
async def predict(data: InputData):
    try:
        input_data = {
            'feature1': data.feature1,
            'feature2': data.feature2
        }


        prediction = predict_model(model, data=input_data)


        return {'prediction': prediction['Label'][0]}
    except Exception as e:
        return {'error': str(e)}

if __name__ == '__main__':
  uvicorn.run(app, host='0.0.0.0', port=8000)